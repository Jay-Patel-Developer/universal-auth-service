# ===========================================
# DEFAULT CONFIGURATION
# ===========================================
# Default profile for local development
spring.profiles.active=development

# ===========================================
# H2 DATABASE CONFIGURATION (DEFAULT)
# ===========================================
# H2 in-memory database for local development and testing
spring.datasource.url=${DATABASE_URL:jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false}
spring.datasource.driver-class-name=${DB_DRIVER:org.h2.Driver}
spring.datasource.username=${DB_USERNAME:sa}
spring.datasource.password=${DB_PASSWORD:}

# H2 Console (enabled by default for local development)
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:true}
spring.h2.console.path=${H2_CONSOLE_PATH:/h2-console}
spring.h2.console.settings.web-allow-others=${H2_WEB_ALLOW_OTHERS:false}

# ===========================================
# JPA/HIBERNATE CONFIGURATION
# ===========================================
# Database platform/dialect - H2 by default, can be overridden
spring.jpa.database-platform=${DB_DIALECT:org.hibernate.dialect.H2Dialect}

# Schema management strategy
# Development: update (auto-create/update schema)
# Production: validate (use Flyway for migrations)
spring.jpa.hibernate.ddl-auto=${DB_DDL_AUTO:update}

# SQL logging (enabled by default for development)
spring.jpa.show-sql=${DB_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${DB_FORMAT_SQL:true}

# ===========================================
# FLYWAY CONFIGURATION
# ===========================================
# Disable Flyway by default (enabled only in production)
spring.flyway.enabled=${FLYWAY_ENABLED:false}

# ===========================================
# CONNECTION POOL CONFIGURATION
# ===========================================
# Connection pool settings (HikariCP by default)
spring.datasource.hikari.maximum-pool-size=${DB_POOL_MAX_SIZE:20}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:5}
spring.datasource.hikari.idle-timeout=${DB_POOL_IDLE_TIMEOUT:300000}
spring.datasource.hikari.max-lifetime=${DB_POOL_MAX_LIFETIME:1200000}
spring.datasource.hikari.connection-timeout=${DB_POOL_CONNECTION_TIMEOUT:20000}

# ===========================================
# JWT CONFIGURATION
# ===========================================
# JWT secret key (change in production)
jwt.secret=${JWT_SECRET:default_dev_secret_key_must_be_changed_in_production_environment_at_least_32_chars}
# JWT expiration time in milliseconds (default: 1 day)
jwt.expiration=${JWT_EXPIRATION:86400000}
# JWT issuer (default: ecommerce-authentication-service)
jwt.issuer=${JWT_ISSUER:ecommerce-authentication-service}

# JWT Configuration
jwt.access-token-expiration=${JWT_ACCESS_EXPIRATION:3600}
jwt.refresh-token-expiration=${JWT_REFRESH_EXPIRATION:604800}
app.jwt.secret=${jwt.secret}
app.jwt.expiration-ms=${JWT_ACCESS_EXPIRATION:3600}000

# ===========================================
# SERVER CONFIGURATION
# ===========================================
# Server port (default: 8080)
server.port=${SERVER_PORT:8080}
# Application name (default: user-authentication-service)
spring.application.name=${APP_NAME:user-authentication-service}

# ===========================================
# CORS CONFIGURATION
# ===========================================
# Allowed origins for CORS (default: localhost:3000,localhost:3001)
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}

# ===========================================
# LOGGING CONFIGURATION
# ===========================================
# Logging level for application (default: DEBUG)
logging.level.com.ecommerce.user=${LOG_LEVEL_APP:DEBUG}
# Logging level for Spring Security (default: WARN)
logging.level.org.springframework.security=WARN

# ===========================================
# FEATURE TOGGLES - DEFAULT
# ===========================================
# Authentication features
features.auth.mfa.enabled=${FEATURE_MFA_ENABLED:false}
features.auth.social-login.enabled=${FEATURE_SOCIAL_LOGIN_ENABLED:true}
features.auth.password-reset.enabled=${FEATURE_PASSWORD_RESET_ENABLED:true}
features.auth.rate-limiting.enabled=${FEATURE_RATE_LIMITING_ENABLED:true}

# Security features
features.security.audit-logging.enabled=${FEATURE_AUDIT_LOGGING_ENABLED:true}
features.security.session-management.enabled=${FEATURE_SESSION_MANAGEMENT_ENABLED:true}
features.security.csrf-protection.enabled=${FEATURE_CSRF_PROTECTION_ENABLED:false}

# Integration features
features.integration.kafka.enabled=${FEATURE_KAFKA_ENABLED:false}
features.integration.redis.enabled=${FEATURE_REDIS_ENABLED:false}
features.integration.email.enabled=${FEATURE_EMAIL_ENABLED:false}

# Monitoring features
features.monitoring.actuator.enabled=${FEATURE_ACTUATOR_ENABLED:true}
features.monitoring.metrics.enabled=${FEATURE_METRICS_ENABLED:true}
features.monitoring.health-checks.enabled=${FEATURE_HEALTH_CHECKS_ENABLED:true}

# Business features
features.business.gdpr-compliance.enabled=${FEATURE_GDPR_ENABLED:true}
features.business.user-analytics.enabled=${FEATURE_USER_ANALYTICS_ENABLED:false}
features.business.automated-cleanup.enabled=${FEATURE_AUTOMATED_CLEANUP_ENABLED:false}

# --- Feature Toggles & Configurability ---
# Core authentication features (always enabled)
features.auth.enabled=true

# MFA enforcement: required, optional, or disabled
features.auth.mfa.enforcement=optional

# Event publishing (Kafka integration)
features.integration.kafka.enabled=true

# Rate limiting (per endpoint, example)
features.auth.rate-limiting.enabled=true
rate.limit.login.enabled=true
rate.limit.registration.enabled=true
rate.limit.mfa.enabled=true

# Security auditing
features.security.audit-logging.enabled=true

# OAuth providers (enable/disable per provider)
features.auth.social-login.enabled=true
features.auth.google.enabled=true
features.auth.facebook.enabled=true
features.auth.github.enabled=true

# ===========================================
# REDIS CONFIGURATION
# ===========================================
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:}
spring.redis.timeout=${REDIS_TIMEOUT:60000}
spring.redis.lettuce.pool.max-active=${REDIS_POOL_MAX_ACTIVE:20}
spring.redis.lettuce.pool.max-idle=${REDIS_POOL_MAX_IDLE:10}
spring.redis.lettuce.pool.min-idle=${REDIS_POOL_MIN_IDLE:5}

# ===========================================
# RATE LIMITING CONFIGURATION
# ===========================================
rate.limit.enabled=${RATE_LIMIT_ENABLED:true}
rate.limit.login.max-attempts=${RATE_LIMIT_LOGIN:5}
rate.limit.login.duration-seconds=${RATE_LIMIT_LOGIN_DURATION:300}
rate.limit.registration.max-attempts=${RATE_LIMIT_REGISTRATION:3}
rate.limit.registration.duration-seconds=${RATE_LIMIT_REGISTRATION_DURATION:3600}

# --- Rate Limiting ---
rate.limit.login.max-attempts=${RATE_LIMIT_LOGIN:5}
rate.limit.registration.max-attempts=${RATE_LIMIT_REGISTRATION:3}
rate.limit.oauth-login.max-attempts=${RATE_LIMIT_OAUTH_LOGIN:10}
rate.limit.password-reset.max-attempts=${RATE_LIMIT_PASSWORD_RESET:3}
rate.limit.login.per-minute=${RATE_LIMIT_LOGIN_PER_MINUTE:5}
rate.limit.registration.per-hour=${RATE_LIMIT_REGISTRATION_PER_HOUR:3}
rate.limit.token-validation.per-minute=${RATE_LIMIT_TOKEN_VALIDATION_PER_MINUTE:100}
rate.limit.password-reset.per-hour=${RATE_LIMIT_PASSWORD_RESET_PER_HOUR:2}

# ===========================================
# EMAIL CONFIGURATION
# ===========================================
spring.mail.host=${MAIL_HOST:localhost}
spring.mail.port=${MAIL_PORT:25}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=${MAIL_AUTH:false}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_STARTTLS:false}

# ===========================================
# SECURITY AUDIT CONFIGURATION
# ===========================================
security.audit.log.enabled=${SECURITY_AUDIT_ENABLED:true}
security.audit.storage.days=${SECURITY_AUDIT_STORAGE_DAYS:90}

# ===========================================
# MFA CONFIGURATION
# ===========================================
mfa.issuer=${MFA_ISSUER:ECommerce Platform}
mfa.backup-codes.count=${MFA_BACKUP_CODES_COUNT:10}
mfa.totp.window=${MFA_TOTP_WINDOW:1}
mfa.secret.length=${MFA_SECRET_LENGTH:32}

# SMS Configuration for MFA
sms.enabled=${SMS_ENABLED:false}
sms.provider=${SMS_PROVIDER:mock}
sms.api.key=${SMS_API_KEY:}
sms.api.secret=${SMS_API_SECRET:}

# --- MFA ---
mfa.recovery-codes.count=${MFA_RECOVERY_CODES_COUNT:10}
mfa.secret.size=${MFA_SECRET_SIZE:20}

# ===========================================
# GDPR CONFIGURATION
# ===========================================
gdpr.retention.days=${GDPR_RETENTION_DAYS:365}
gdpr.grace-period.days=${GDPR_GRACE_PERIOD_DAYS:30}
gdpr.export.format=${GDPR_EXPORT_FORMAT:JSON}
gdpr.deletion.schedule=${GDPR_DELETION_SCHEDULE:0 0 2 * * ?}

# ===========================================
# KAFKA CONFIGURATION
# ===========================================
kafka.enabled=${KAFKA_ENABLED:false}
kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
kafka.producer.retries=${KAFKA_PRODUCER_RETRIES:3}
kafka.producer.batch-size=${KAFKA_PRODUCER_BATCH_SIZE:16384}
kafka.producer.linger-ms=${KAFKA_PRODUCER_LINGER_MS:1}
kafka.producer.buffer-memory=${KAFKA_PRODUCER_BUFFER_MEMORY:33554432}
kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:user-service}
kafka.consumer.auto-offset-reset=${KAFKA_CONSUMER_AUTO_OFFSET_RESET:earliest}
kafka.consumer.enable-auto-commit=${KAFKA_CONSUMER_AUTO_COMMIT:true}

# Kafka Topics
kafka.topics.user-events=${KAFKA_TOPIC_USER_EVENTS:user-events}
kafka.topics.user-auth-events=${KAFKA_TOPIC_USER_AUTH_EVENTS:user-auth-events}
kafka.topics.partitions=${KAFKA_TOPIC_PARTITIONS:3}
kafka.topics.replication-factor=${KAFKA_TOPIC_REPLICATION_FACTOR:1}

# ===========================================
# REDIS FALLBACK CONFIGURATION
# ===========================================
redis.fallback.enabled=${REDIS_FALLBACK_ENABLED:true}
redis.circuit-breaker.enabled=${REDIS_CIRCUIT_BREAKER_ENABLED:true}
redis.circuit-breaker.failure-threshold=${REDIS_CIRCUIT_BREAKER_THRESHOLD:5}
redis.circuit-breaker.recovery-timeout=${REDIS_CIRCUIT_BREAKER_RECOVERY:30000}

# ===========================================
# SCHEDULED TASKS CONFIGURATION
# ===========================================
scheduled.gdpr-cleanup.enabled=${SCHEDULED_GDPR_CLEANUP_ENABLED:true}
scheduled.security-audit.enabled=${SCHEDULED_SECURITY_AUDIT_ENABLED:true}
scheduled.session-cleanup.enabled=${SCHEDULED_SESSION_CLEANUP_ENABLED:true}

# ===========================================
# ACTUATOR CONFIGURATION
# ===========================================
management.endpoints.web.exposure.include=${ACTUATOR_ENDPOINTS:health,info,metrics}
management.endpoint.health.show-details=${HEALTH_SHOW_DETAILS:when-authorized}
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# ===========================================
# SPRING BOOT 3.x COMPATIBILITY
# ===========================================
spring.jpa.open-in-view=false
spring.main.allow-bean-definition-overriding=false

# --- Password Reset ---
password-reset.token-validity-minutes=${PASSWORD_RESET_TOKEN_VALIDITY:30}