# ===========================================
# STAGING PROFILE CONFIGURATION
# ===========================================
# This profile is optimized for staging environments
# Uses real database but with enhanced debugging and testing features

# Database Configuration - Uses environment variables like production
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=${DB_DRIVER:org.postgresql.Driver}

# JPA Configuration for Staging
spring.jpa.database-platform=${DB_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.hibernate.ddl-auto=${DB_DDL_AUTO:update}
spring.jpa.show-sql=${DB_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${DB_FORMAT_SQL:true}

# Connection Pool Configuration for Staging
spring.datasource.hikari.maximum-pool-size=${DB_POOL_MAX_SIZE:30}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:5}
spring.datasource.hikari.idle-timeout=${DB_POOL_IDLE_TIMEOUT:300000}
spring.datasource.hikari.max-lifetime=${DB_POOL_MAX_LIFETIME:1200000}
spring.datasource.hikari.connection-timeout=${DB_POOL_CONNECTION_TIMEOUT:30000}

# Enable Flyway for Staging (with baseline support)
spring.flyway.enabled=${FLYWAY_ENABLED:true}
spring.flyway.baseline-on-migrate=true
spring.flyway.clean-disabled=false

# Staging Logging (balanced between debug and performance)
logging.level.root=${LOG_LEVEL_ROOT:INFO}
logging.level.com.ecommerce.user=${LOG_LEVEL_APP:DEBUG}
logging.level.org.springframework.security=${LOG_LEVEL_SECURITY:INFO}
logging.level.org.hibernate.SQL=${LOG_LEVEL_SQL:INFO}

# Staging JWT Settings
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:7200000}
jwt.issuer=${JWT_ISSUER:ecommerce-authentication-service-staging}

# CORS - Allow staging domains
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://staging.yourdomain.com}

# Security Debug for staging
security.debug=${SECURITY_DEBUG:true}

# H2 Console - Disabled in staging
spring.h2.console.enabled=false

# ===========================================
# FEATURE TOGGLES - STAGING
# ===========================================
# Authentication features
features.auth.mfa.enabled=${FEATURE_MFA_ENABLED:true}
features.auth.social-login.enabled=${FEATURE_SOCIAL_LOGIN_ENABLED:true}
features.auth.password-reset.enabled=${FEATURE_PASSWORD_RESET_ENABLED:true}
features.auth.rate-limiting.enabled=${FEATURE_RATE_LIMITING_ENABLED:true}

# Security features
features.security.audit-logging.enabled=${FEATURE_AUDIT_LOGGING_ENABLED:true}
features.security.session-management.enabled=${FEATURE_SESSION_MANAGEMENT_ENABLED:true}
features.security.csrf-protection.enabled=${FEATURE_CSRF_PROTECTION_ENABLED:true}

# Integration features
features.integration.kafka.enabled=${FEATURE_KAFKA_ENABLED:true}
features.integration.redis.enabled=${FEATURE_REDIS_ENABLED:true}
features.integration.email.enabled=${FEATURE_EMAIL_ENABLED:true}

# Monitoring features
features.monitoring.actuator.enabled=${FEATURE_ACTUATOR_ENABLED:true}
features.monitoring.metrics.enabled=${FEATURE_METRICS_ENABLED:true}
features.monitoring.health-checks.enabled=${FEATURE_HEALTH_CHECKS_ENABLED:true}

# Business features
features.business.gdpr-compliance.enabled=${FEATURE_GDPR_ENABLED:true}
features.business.user-analytics.enabled=${FEATURE_USER_ANALYTICS_ENABLED:true}
features.business.automated-cleanup.enabled=${FEATURE_AUTOMATED_CLEANUP_ENABLED:true}

# ===========================================
# ACTUATOR CONFIGURATION - STAGING
# ===========================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus,env,configprops,beans,conditions
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true